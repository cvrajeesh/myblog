<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[rajeesh]]></title>
  <subtitle><![CDATA[Sharing My Thoughts]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://rajeeshcv.com/"/>
  <updated>2015-05-07T13:33:42.819Z</updated>
  <id>http://rajeeshcv.com/</id>
  
  <author>
    <name><![CDATA[Rajeesh C V]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Run Gulp Tasks in a Predefined Order]]></title>
    <link href="http://rajeeshcv.com/2015/05/07/Run-Gulp-Tasks-in-a-Predefined-Order/"/>
    <id>http://rajeeshcv.com/2015/05/07/Run-Gulp-Tasks-in-a-Predefined-Order/</id>
    <published>2015-05-07T12:56:28.000Z</published>
    <updated>2015-05-07T13:33:42.819Z</updated>
    <content type="html"><![CDATA[<p><a href="http://gulpjs.com/" target="_blank" rel="external">Gulp</a> is build automation tool which runs on top of Node. In my current project I had to execute set of tasks in a predefined order, in which some of the tasks can be run in parallel to improve the efficiency.</p>
<p>By default <a href="http://gulpjs.com/" target="_blank" rel="external">Gulp</a> runs all the tasks at the same time, so after googling I saw this official <a href="https://github.com/gulpjs/gulp/blob/master/docs/recipes/running-tasks-in-series.md" target="_blank" rel="external">article</a>. In this approach every task will takes a callback function so that Gulp knows when that task is completed. Then other task add this as a dependency</p>
<p>E.g. from the official article</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// takes in a callback so the engine knows when it'll be done</span></span><br><span class="line">gulp.task(<span class="string">'one'</span>, <span class="function"><span class="keyword">function</span><span class="params">(cb)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// do stuff -- async or otherwise</span></span><br><span class="line">    <span class="comment">// if err is not null and not undefined, the orchestration will stop, and 'two' will not run</span></span><br><span class="line">    cb(err);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// identifies a dependent task must be complete before this one begins</span></span><br><span class="line">gulp.task(<span class="string">'two'</span>, [<span class="string">'one'</span>], <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// task 'one' is done now</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'one'</span>, <span class="string">'two'</span>]);</span><br><span class="line"><span class="comment">// alternatively: gulp.task('default', ['two']);</span></span><br></pre></td></tr></table></figure>
<p>Here task <code>two</code> is depends on task <code>one</code>, so Gulp ensures that task <code>one</code> is completed before running task <code>two</code>.One drawback with this approach is tasks are tightly coupled to each other which reduces the flexibility if you want to change the order.</p>
<p>So I came across a plugin called <a href="https://www.npmjs.com/package/run-sequence" target="_blank" rel="external">run-sequence</a>, this plugin allows you to order the tasks much easy. We can re-write the first example like this</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>),</span><br><span class="line">    runSequence = <span class="built_in">require</span>(<span class="string">'run-sequence'</span>);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'one'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// Returning the stream is improtant</span></span><br><span class="line">  <span class="keyword">return</span> gulp.src(....)</span><br><span class="line">        .pipe(gulp.dest(....);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'two'</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// Returning the stream is improtant</span></span><br><span class="line">  <span class="keyword">return</span> gulp.src(....)</span><br><span class="line">        .pipe(gulp.dest(....);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    runsSequence(<span class="string">'one'</span>, <span class="string">'two'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p><strong>Caution</strong><br>Make sure each of the tasks returns a <code>stream</code></p>
<h3 id="Running_tasks_in_parallel">Running tasks in parallel</h3><p><a href="https://www.npmjs.com/package/run-sequence" target="_blank" rel="external">run-sequence</a> can do much more, like running in parallel</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'default'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    runsSequence(</span><br><span class="line">        <span class="string">'task-1'</span>,</span><br><span class="line">        <span class="string">'task-2'</span>,</span><br><span class="line">        [<span class="string">'task-3'</span>, <span class="string">'task-4'</span>, <span class="string">'task-5'</span>],</span><br><span class="line">        [<span class="string">'task-7'</span>, <span class="string">'task-8'</span>]</span><br><span class="line">      );</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>The above one ensures that <code>task-1</code> and <code>task-2</code> will be running in series, after that <code>task-3</code>, <code>task-4</code>, <code>task-5</code> will run in parallel, then <code>task-7</code> and <code>task-8</code> are run in parallel as well.</p>
<p>Main advantage I see when compared to official documentation is - tasks are independent and orchestration is done by someone else.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://gulpjs.com/" target="_blank" rel="external">Gulp</a> is build automation tool which runs on top of Node. In my current pr]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[EmberJS Error Logging in Production]]></title>
    <link href="http://rajeeshcv.com/2014/06/22/EmberJS-Error-Logging-in-Production/"/>
    <id>http://rajeeshcv.com/2014/06/22/EmberJS-Error-Logging-in-Production/</id>
    <published>2014-06-22T07:22:57.000Z</published>
    <updated>2015-04-22T20:33:35.760Z</updated>
    <content type="html"><![CDATA[<p>In order to log all errors in an <a href="http://emberjs.com/" target="_blank" rel="external">EmberJS</a> application, <a href="http://emberjs.com/" target="_blank" rel="external">EmberJS</a> provides a global hook called <code>onerror</code></p>
<p>Here is a link to the official documentation - <a href="http://emberjs.com/guides/understanding-ember/debugging/#toc_implement-an-ember-onerror-hook-to-log-all-errors-in-production" target="_blank" rel="external">http://emberjs.com/guides/understanding-ember/debugging/#toc_implement-an-ember-onerror-hook-to-log-all-errors-in-production</a></p>
<p>Code sample from the documentation (v 1.5.1) look like this</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Ember.onerror = <span class="function"><span class="keyword">function</span><span class="params">(error)</span> </span>&#123;</span><br><span class="line">  Em.$.ajax(<span class="string">'/error-notification'</span>, &#123;</span><br><span class="line">    type: <span class="string">'POST'</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">      stack: error.stack,</span><br><span class="line">      otherInformation: <span class="string">'exception message'</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>What this piece of code does is, whenever an error occurs that stack trace is send to the server using an AJAX request. This will works great for most of the scenarios but….</p>
<p>Consider a situation where an error occurs inside a mouse move event handler. Then you will be trying to sending hundreds of requests to server in short interval. This can bring down your server if not handled properly, it’s like <a href="http://en.wikipedia.org/wiki/Denial-of-service_attack" target="_blank" rel="external">DDOS</a>-ing your own server.</p>
<p>Good approach will be to control the rate at which errors are send to the server for logging. This can be done using a concept called Throttling - which ensures that the target method is never called more frequently than the specified period of time.</p>
<p>Google for JavaScript Throttling you can find lot different implementations. EmberJS also provide it’s own throttling function Ember.run.throttle</p>
<p>Here is the example from the official <a href="http://emberjs.com/" target="_blank" rel="external">EmberJS</a> website</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myFunc = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123; <span class="built_in">console</span>.log(<span class="keyword">this</span>.name + <span class="string">' ran.'</span>); &#125;;</span><br><span class="line"><span class="keyword">var</span> myContext = &#123;name: <span class="string">'throttle'</span>&#125;;</span><br><span class="line"></span><br><span class="line">Ember.run.throttle(myContext, myFunc, <span class="number">150</span>);</span><br><span class="line"><span class="comment">// myFunc is invoked with context myContext</span></span><br></pre></td></tr></table></figure>
<p>This <code>throttling</code> function can be used for sending errors to the server. Here is a working demo which shows the throttled error logging -<br><a href="http://cvrajeesh.github.io/emberjs/errorhandling.html" target="_blank" rel="external">http://cvrajeesh.github.io/emberjs/errorhandling.html</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>In order to log all errors in an <a href="http://emberjs.com/" target="_blank" rel="external">EmberJS</a> application, <a href="http://em]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[EmberJS - How to Detect User Inactivity]]></title>
    <link href="http://rajeeshcv.com/2014/06/12/EmberJS-How-to-Detect-User-Inactivity/"/>
    <id>http://rajeeshcv.com/2014/06/12/EmberJS-How-to-Detect-User-Inactivity/</id>
    <published>2014-06-12T07:17:49.000Z</published>
    <updated>2015-04-22T20:33:35.762Z</updated>
    <content type="html"><![CDATA[<p><strong>Scenario:</strong></p>
<p>I am working on a web application that has a Single Page Application module which is built using <a href="http://emberjs.com/" target="_blank" rel="external">EmberJS</a> framework.</p>
<p>This EmberJS application is a page designer where user can drag and drop items to the design surface and change properties of these items. Finally when the page is ready, he can save the changes back to server.</p>
<p><strong>Problem:</strong></p>
<p>Whenever a user works on the page designer for long period of time without saving the changes in between - finally when he try to save all of his changes in one shot, server side session was already timed out.</p>
<p><strong>Solution:</strong></p>
<p>Implemented an API on the server side which can refresh the session if this API is invoked.</p>
<p>So on the <a href="http://emberjs.com/" target="_blank" rel="external">EmberJS</a> application side we had to calculate how long a user not active. Then we can check for this inactivity time periodically and decide whether to refresh session or not.</p>
<p>An easy way to do it in EmberJS is by hooking to the <code>mousemove</code>, <code>keydown</code> events of the <code>ApplicationView</code>. Details can be found in the EmberJS documentation <a href="http://emberjs.com/api/classes/Ember.View.html#toc_responding-to-browser-events" target="_blank" rel="external">http://emberjs.com/api/classes/Ember.View.html#toc_responding-to-browser-events</a></p>
<p>Here is code sample which does this</p>
<p>First I am creating the application object with an additional property for tracking the last active time.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> App = Ember.Application.create(&#123;</span><br><span class="line">    lastActiveTime: <span class="literal">null</span>,</span><br><span class="line">    ready: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">        App.lastActiveTime = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>After that, hook the events in which you are interested in <code>ApplicationView</code>, which will update the last active time defined in the application object.</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">App.ApplicationView = Ember.View.extend(&#123;</span><br><span class="line">    templateName: <span class="string">'application'</span>,</span><br><span class="line"></span><br><span class="line">    mouseMove: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        App.lastActiveTime = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    touchStart: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        App.lastActiveTime = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    keyDown: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        App.lastActiveTime = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>In our case, I am interested on <code>mouseMove</code>, <code>touchStart</code> (for touch devices) and <code>keyDown</code> events. When they are getting fired I will update the last active time with current time.</p>
<p>Now you can use the last active time property to find out how long the user is active.</p>
<blockquote>
<p>Demo: <a href="http://cvrajeesh.github.io/emberjs/inactivity.html" target="_blank" rel="external">http://cvrajeesh.github.io/emberjs/inactivity.html</a></p>
</blockquote>
<p>This demo uses <a href="http://momentjs.com/" target="_blank" rel="external">moment.js</a> for calculating time difference as well as for formatting the time.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><strong>Scenario:</strong></p>
<p>I am working on a web application that has a Single Page Application module which is built using <a hre]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Visual Studio : Debugging Silverlight Application with Chrome and Firefox]]></title>
    <link href="http://rajeeshcv.com/2013/08/03/Visual-Studio-Debugging-Silverlight-Application-with-Chrome-and-Firefox/"/>
    <id>http://rajeeshcv.com/2013/08/03/Visual-Studio-Debugging-Silverlight-Application-with-Chrome-and-Firefox/</id>
    <published>2013-08-03T07:13:01.000Z</published>
    <updated>2015-04-22T20:33:35.841Z</updated>
    <content type="html"><![CDATA[<p>Here is a tip if you want to debug Silverlight applications from Visual Studio 2012 if it is running in Google Chrome or Firefox</p>
<p><strong>Google Chrome :</strong></p>
<ol>
<li>Run the application and select Debug –&gt; Attach to Process from the menu</li>
<li>From the Available Processes list, look for process named “chrome.exe” with type <em>Silverlight</em></li>
<li>Select that process and click the <em>Attach</em> button</li>
</ol>
<p>Here is screenshot from my machine<br><img src="http://cdn.rajeeshcv.com/images/2013/08/201308301039_chrome_silverlight_debugging.png" alt="Visual Studio attach to Silverlight in Chrome"></p>
<p><strong>Mozilla Firefox :</strong></p>
<p>Firefox has a slightly different approach</p>
<ol>
<li>Run the application and select Debug –&gt; Attach to Process from the menu</li>
<li>From the Available Processes list, look for process named <em>plugin-container.exe</em></li>
<li>Select that process and click the <em>Attach</em> button</li>
</ol>
<p>Here is the screenshot<br><img src="http://cdn.rajeeshcv.com/images/2013/08/201308301039_firefox_silverlight_debugging.png" alt="Visual Studio attach to Silverlight in Firefox"></p>
<p>Voila!!! now you are able to get the breakpoints in Visual Studio</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Here is a tip if you want to debug Silverlight applications from Visual Studio 2012 if it is running in Google Chrome or Firefox</p>
<p><]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[One of the Top E-Commerce Website in India Stores Passwords Incorrectly]]></title>
    <link href="http://rajeeshcv.com/2012/12/06/One-of-the-Top-E-Commerce-Website-in-India-Stores-Passwords-Incorrectly/"/>
    <id>http://rajeeshcv.com/2012/12/06/One-of-the-Top-E-Commerce-Website-in-India-Stores-Passwords-Incorrectly/</id>
    <published>2012-12-06T07:06:44.000Z</published>
    <updated>2015-04-22T20:33:35.828Z</updated>
    <content type="html"><![CDATA[<p>This incident made me feel very bad – couple of weeks before I ordered a product from <a href="http://www.naaptol.com/" target="_blank" rel="external">naaptol</a> a well-known E-Commerce website in India.  It was the first time I was ordering something from them. So I had to register first, after the registration was completed got a confirm email from them</p>
<p><img src="http://cdn.rajeeshcv.com/images/2012/12/20121206105945_naaptolregistration.png" alt="Registration confirmation email from naaptol"></p>
<p>Oops!!! My password is in clear text.</p>
<p>I thought they might be generating the email during the registration process before it is stored in their database. Without bothering much, I ordered the item. Thought about investigating about the “clear text password” little bit, but somehow forgot it.</p>
<p>After few days when I got the product which I have ordered, it reminded me about this password incident. So in order see whether they are hashing my password or not, I used their <strong>Forgot my password</strong> option. It asked for my email address. After the submission got a message saying</p>
<blockquote>
<p>We’ have sent you an e-mail at the submitted ID including instructions. You’ll be back to your shopping place in no matter of time.</p>
</blockquote>
<p>As expected, got an email from them</p>
<p><img src="http://cdn.rajeeshcv.com/images/2012/12/20121206105945_naaptolforgotpassword.png" alt="Forgot my password email from naaptol"></p>
<p>It reads <em>Here is your new Login and Password</em> and surprisingly password they gave is same as my old password even though in the email it is mentioned that they are sending a new password. It confirmed that they are not hashing the passwords.</p>
<p>Will they be storing it in plain text? Who knows…</p>
<blockquote>
<p>Did someone tell you internet is not a good place to store your secrets?</p>
</blockquote>
<p>I tried to play a nice role, so sent them an email telling about about the password hashing problem. You know what happened… no reply from them till now.</p>
<p>If you are in the naaptol technical team, convince your boss about the importance of securing the password and push that functionality in the next release.</p>
<p>If you are a non-technical manager in naaptol, tell your developers to read this article from Jeff - <a href="http://www.codinghorror.com/blog/2007/09/youre-probably-storing-passwords-incorrectly.html" target="_blank" rel="external">You’re Probably Storing Passwords Incorrectly</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>This incident made me feel very bad – couple of weeks before I ordered a product from <a href="http://www.naaptol.com/" target="_blank" r]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Automating WYSIWYG Editors using Selenium Web Driver]]></title>
    <link href="http://rajeeshcv.com/2012/12/01/Automating-WYSIWYG-Editors-using-Selenium-Web-Driver/"/>
    <id>http://rajeeshcv.com/2012/12/01/Automating-WYSIWYG-Editors-using-Selenium-Web-Driver/</id>
    <published>2012-12-01T06:58:23.000Z</published>
    <updated>2015-04-22T20:33:35.736Z</updated>
    <content type="html"><![CDATA[<p>Automating web application using <a href="https://github.com/SeleniumHQ/selenium/wiki/Getting-Started" target="_blank" rel="external">selenium for acceptance/integration tests</a> is very easy. Recently I have faced few issues when automating a page with a JavaScript based <a href="http://en.wikipedia.org/wiki/WYSIWYG" target="_blank" rel="external">WYSIWYG</a> editors.</p>
<p>The reason why it is hard because most of these editors create a new editable HTML document inside an iframe. There are two ways I aware that you can set text on these editors</p>
<ol>
<li>Executing a JavaScript code in the current page</li>
<li>Sending keys on the editable iframe</li>
</ol>
<p>Here is how I automated two <a href="http://en.wikipedia.org/wiki/WYSIWYG" target="_blank" rel="external">WYSIWYG</a> editors using selenium web driver.</p>
<h3 id="bootstrap-wysihtml5">bootstrap-wysihtml5</h3><p>Website: <a href="http://jhollingworth.github.io/bootstrap-wysihtml5/" target="_blank" rel="external">http://jhollingworth.github.io/bootstrap-wysihtml5/</a></p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">SetBootstrapWysihtml5Content</span><span class="params">(IWebElement textArea, <span class="keyword">string</span> content)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">string</span> script = <span class="keyword">string</span>.Format(<span class="string">@"$('#&#123;0&#125;').data('wysihtml5').editor.setValue('&#123;1&#125;');"</span>, textArea.GetAttribute(<span class="string">"id"</span>), content);</span><br><span class="line">    ((IJavaScriptExecutor)<span class="keyword">this</span>.WebDriver).ExecuteScript(script);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>What this method does is, it accepts the <code>TextArea</code> web element which you are converting to an editor and the actual content to be set. Then it executes a piece of JavaScript on the current <code>WebDriver</code> context.</p>
<p>For e.g. if you have a TextArea element with id <code>summary</code> then executing below JavaScript statement will insert a <code>h1</code> tag  with “Test” to the editor</p>
<p><code>$(&#39;#summary&#39;).data(&#39;wysihtml5&#39;).editor.setValue(&#39;&lt;h1&gt;Test&lt;/h1&gt;&#39;);</code></p>
<h3 id="TinyMCE">TinyMCE</h3><p>Website: <a href="http://www.tinymce.com/" target="_blank" rel="external">http://www.tinymce.com/</a></p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">SetTinyMCEContent</span><span class="params">(IWebElement textArea, <span class="keyword">string</span> content)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">string</span> textAreaId = textArea.GetAttribute(<span class="string">"id"</span>);</span><br><span class="line">    <span class="keyword">string</span> frameId = <span class="keyword">string</span>.Format(<span class="string">"&#123;0&#125;_ifr"</span>, textAreaId);</span><br><span class="line">    <span class="keyword">var</span> frame = <span class="keyword">this</span>.WebDriver.FindElement(By.Id(frameId));</span><br><span class="line">    <span class="keyword">this</span>.WebDriver.SwitchTo().Frame(frame);</span><br><span class="line">    ((IJavaScriptExecutor)<span class="keyword">this</span>.WebDriver).ExecuteScript(<span class="string">"document.body.innerHTML = '"</span> + content + <span class="string">"'"</span>);</span><br><span class="line">    <span class="keyword">this</span>.WebDriver.SwitchTo().DefaultContent();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>This method also accepts the <code>TextArea</code> web element which you are converting to an editor and the actual content to be set. Then it finds the corresponding <code>iframe</code> and set the <code>innerHTML</code> by executing a JavaScript statement.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Automating web application using <a href="https://github.com/SeleniumHQ/selenium/wiki/Getting-Started" target="_blank" rel="external">sel]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Introducing SourceCodeReader]]></title>
    <link href="http://rajeeshcv.com/2012/08/02/Introducing-SourceCodeReader/"/>
    <id>http://rajeeshcv.com/2012/08/02/Introducing-SourceCodeReader/</id>
    <published>2012-08-02T06:51:32.000Z</published>
    <updated>2015-04-22T20:33:35.807Z</updated>
    <content type="html"><![CDATA[<p>Have you ever tried to understand a project just by going through the source code?</p>
<p>That’s how I do most of the time, till now I haven’t seen any up to date documentation which gives the clear understanding of how the code is implemented. In reality after a certain period during the development, documentation goes out of sync with the source code. So some one joins the project lately has only one way to understand the project <em>Go through the source code</em></p>
<p>Sometimes I go through the open source projects hosted on either Github, Codeplex or Google code. All the hosting site provide you with a user interface for browsing through the source code with syntax highlighting support, which is nice. The problem I had with this is – if I see a object creation statement, method call there is no way for me to find out how it is implemented other than manually going through the files and finding it out.</p>
<p>Most of the full blown editors provide a feature where you can navigate to the implementation directly from where it is used for e.g. Microsoft Visual Studio provides <em>Go To Definition</em> feature. I find this feature very much useful for understanding the project. Only draw back with this approach is you have to completely get the latest version of source code to your local machine.</p>
<p><a href="http://sourcecodereader.apphb.com/" target="_blank" rel="external">SourceCodeReader</a> is trying solve this navigation problem on the web. With this application you can open a project and browse through the files with code navigation support.</p>
<p>Source code for this project can be found at <a href="https://github.com/cvrajeesh/SourceCodeReader" target="_blank" rel="external">https://github.com/cvrajeesh/SourceCodeReader</a></p>
<h3 id="Limitations">Limitations</h3><ol>
<li>Now supports only Github code repository</li>
<li>Only supports .Net C#  projects, other type of projects also works without code navigation support</li>
</ol>
<h3 id="How_to_use_this_application">How to use this application</h3><p>Go to <a href="http://sourcecodereader.apphb.com/" target="_blank" rel="external">SourceCodeReader</a> and enter the URL of a C# project on Github</p>
<p><img src="http://cdn.rajeeshcv.com/images/2012/08/20120802065851_image_thumb.png" alt="SourceCodeReader home page"></p>
<p>Once you have entered a Github project link and open the project, it get the source code from the Github and present you with file browser.</p>
<p><img src="http://cdn.rajeeshcv.com/images/2012/08/20120802065857_image_thumb_2.png" alt="SourceCodeReader project directory"></p>
<p>When you navigate to a C# file you will be able to see clickable links for identifiers which takes you the file location where that is declared.</p>
<p><img src="http://cdn.rajeeshcv.com/images/2012/08/20120802065903_image_thumb_1.png" alt="SourceCodeReader Go To Definition feature"></p>
<p><strong>Sample projects :</strong></p>
<ul>
<li><a href="http://sourcecodereader.apphb.com/#/open/cvrajeesh/SourceCodeReader" target="_blank" rel="external">http://sourcecodereader.apphb.com/#/open/cvrajeesh/SourceCodeReader</a></li>
<li><a href="http://sourcecodereader.apphb.com/#/open/ayende/ravendb" target="_blank" rel="external">http://sourcecodereader.apphb.com/#/open/ayende/ravendb</a></li>
</ul>
<p>Hope you liked this idea, please provide me with your valuable feedback.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Have you ever tried to understand a project just by going through the source code?</p>
<p>That’s how I do most of the time, till now I ha]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Integrating BrowserID In To Your ASP.NET MVC Application]]></title>
    <link href="http://rajeeshcv.com/2011/12/17/Integrating-BrowserID-In-To-Your-ASP-NET-MVC-Application/"/>
    <id>http://rajeeshcv.com/2011/12/17/Integrating-BrowserID-In-To-Your-ASP-NET-MVC-Application/</id>
    <published>2011-12-17T06:33:16.000Z</published>
    <updated>2015-04-22T20:33:35.805Z</updated>
    <content type="html"><![CDATA[<p><em>BrowserID</em> is a decentralized identity system which verifies the ownership of an email address in a secure manner, without the use of any application specific authentication mechanism. Which means, you don’t need to provide an login forms in your application, instead use BrowserID feature.</p>
<p><img src="http://cdn.rajeeshcv.com/images/2011/12/20111217024113_BrowserID_4.png" alt="BrowserId screenshot"></p>
<p>I am not going to explain in detail about this, but you can follow the links below to know more about it</p>
<ul>
<li><a href="https://browserid.org/" target="_blank" rel="external">Official website</a></li>
<li><a href="https://github.com/mozilla/browserid/wiki/How-to-Use-BrowserID-on-Your-Site" target="_blank" rel="external">How to Use BrowserID on Your Site</a></li>
<li><a href="http://lloyd.io/how-browserid-works/" target="_blank" rel="external">How BrowserID Works</a></li>
</ul>
<p>I have created demo application to show how it could be integrated into ASP.NET MVC (it could applied to ASP.NET Forms also) application.</p>
<ul>
<li><a href="http://nbrowserid.apphb.com/" target="_blank" rel="external">Demo app</a></li>
<li><a href="https://github.com/cvrajeesh/NBrowserID" target="_blank" rel="external">Demo source code</a></li>
</ul>
<h3 id="How_the_Demo_Application_works">How the Demo Application works</h3><p>In this demo, <a href="http://nbrowserid.apphb.com/Secret" target="_blank" rel="external">Secret page</a> link can only accessed if you have logged into the application. In order to login I have provided a <em>Sign in</em> button, like most of the applications, but when you click on it. It will open a pop-up window (make sure you have disable pop-up blockers), which is a URL from <a href="https://browserid.org" target="_blank" rel="external">https://browserid.org</a> not from my application. If you don’t have a BrowserID create one, otherwise enter the Email address and Password. Then follow the steps and finally click on the <em>Sign in</em> button, which log you into the application and from there you can access the <a href="http://nbrowserid.apphb.com/Secret" target="_blank" rel="external">Secret page</a> link.</p>
<h3 id="How_to_implement_this_in_ASP-NET_MVC">How to implement this in ASP.NET MVC</h3><p><strong>Enable BrowserID in your application : </strong></p>
<p>Include the BrowserID javascript file <a href="https://browserid.org/include.js" target="_blank" rel="external">https://browserid.org/include.js</a> to your master page<br><code>&lt;script src=&quot;@Url.Content(&quot;https://browserid.org/include.js&quot;)&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</code></p>
<p><strong>Identify the User : </strong></p>
<p>Instead of displaying a login form on your site which takes a username and password, it uses the BrowserID JavaScript API when the user clicks your sign-in button. For that I have added the below script to the <em>_LogOnPartial.cshtml</em> which comes with the ASP.NET MVC application you have created</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">  $(<span class="string">'#login'</span>).click(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">      navigator.id.getVerifiedEmail(gotVerifiedEmail);</span><br><span class="line">  &#125;);</span><br><span class="line">.....</span><br><span class="line">.....</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>Upon a successful sign-in, you’ll be called back with an assertion, a string containing a signed claim that proves the user is who they say they are. Which is passed to a method called <code>gotVerifiedEmail</code></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// a handler that is passed an assertion after the user logs in via the</span></span><br><span class="line"><span class="comment">// browserid dialog</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gotVerifiedEmail</span><span class="params">(assertion)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// got an assertion, now send it up to the server for verification</span></span><br><span class="line">    <span class="keyword">if</span> (assertion !== <span class="literal">null</span>) &#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            type: <span class="string">'POST'</span>,</span><br><span class="line">            url: <span class="string">'/Account/LogOn'</span>,</span><br><span class="line">            data: &#123; assertion: assertion &#125;,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> <span class="params">(res, status, xhr)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (res != <span class="literal">null</span>) &#123;</span><br><span class="line">                    loggedIn(res.email);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            error: <span class="function"><span class="keyword">function</span> <span class="params">(res, status, xhr)</span> </span>&#123;</span><br><span class="line">                alert(<span class="string">"login failure"</span> + res);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Which then sends a POST Request to the <code>LogOn</code> method on the Account controller, for verifying the assertion is correct or not. If it is a verified correctly, we will set up a forms authentication cookie so that ASP.NET feels that user has logged in to the application. Then returns the Email address back.</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[HttpPost]</span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionResult <span class="title">LogOn</span><span class="params">(<span class="keyword">string</span> assertion)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> authentication = <span class="keyword">new</span> BrowserIDAuthentication();</span><br><span class="line">    <span class="keyword">var</span> verificationResult = authentication.Verify(assertion);</span><br><span class="line">    <span class="keyword">if</span> (verificationResult.IsVerified)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span> email = verificationResult.Email;</span><br><span class="line">        FormsAuthentication.SetAuthCookie(email, <span class="keyword">false</span>);</span><br><span class="line">        <span class="keyword">return</span> Json(<span class="keyword">new</span> &#123; email &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Json(<span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In order to do the verification, we post the assertion to the URL provided by the Identity Authority itself (<a href="https://browserid.org/verify" target="_blank" rel="external">https://browserid.org/verify</a> in this case), which will give a valid response if it is valid. The Verify method looks like this</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> VerificationResult <span class="title">Verify</span><span class="params">(<span class="keyword">string</span> assertion)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    JObject verificationResult = <span class="keyword">this</span>.GetVerificationResult(assertion);</span><br><span class="line">    <span class="keyword">string</span> email = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">bool</span> verified = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (verificationResult != <span class="keyword">null</span> &amp;&amp; verificationResult[<span class="string">"status"</span>].ToString() == <span class="string">"okay"</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        email = verificationResult[<span class="string">"email"</span>].ToString();</span><br><span class="line">        verified = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> VerificationResult &#123;Email = email, IsVerified = verified &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> Gets the verification result from Identity Authority.</span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;param name="assertion"&gt;</span>The assertion.<span class="xmlDocTag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;returns&gt;</span><span class="xmlDocTag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> JObject <span class="title">GetVerificationResult</span><span class="params">(<span class="keyword">string</span> assertion)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="comment">// Build he request</span></span><br><span class="line">    <span class="keyword">var</span> req = (HttpWebRequest)WebRequest.Create(IdentityAuthorityVerificationUrl);</span><br><span class="line">    req.Method = <span class="string">"POST"</span>;</span><br><span class="line">    req.ContentType = <span class="string">"application/x-www-form-urlencoded"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (HttpContext.Current == <span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NullReferenceException(<span class="string">"HttContext is null. Please make sure that, your application is running in a web scenario"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Build the data for posting</span></span><br><span class="line">    <span class="keyword">var</span> payload = <span class="keyword">string</span>.Format(<span class="string">"assertion=&#123;0&#125;&amp;audience=&#123;1&#125;"</span>, assertion, HttpContext.Current.Request.Headers[<span class="string">"Host"</span>]);</span><br><span class="line">    <span class="keyword">byte</span>[] payloadInBytes = Encoding.UTF8.GetBytes(payload);</span><br><span class="line">    req.ContentLength = payloadInBytes.Length;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> dataStream = req.GetRequestStream();</span><br><span class="line">    dataStream.Write(payloadInBytes, <span class="number">0</span>, payloadInBytes.Length);</span><br><span class="line">    dataStream.Close();</span><br><span class="line"></span><br><span class="line">    JObject result = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> res = req.GetResponse();</span><br><span class="line">    dataStream = res.GetResponseStream();</span><br><span class="line">    <span class="keyword">if</span> (dataStream != <span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> responseData = <span class="keyword">new</span> StreamReader(dataStream).ReadToEnd();</span><br><span class="line">        res.Close();</span><br><span class="line">        dataStream.Close();</span><br><span class="line">        result = JObject.Parse(responseData);</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        res.Close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Hope this will help you to setup an authentication system to your application very easily and in a more secure way.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><em>BrowserID</em> is a decentralized identity system which verifies the ownership of an email address in a secure manner, without the us]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Attach to Any ASP.NET Web Server from Visual Studio in One Click]]></title>
    <link href="http://rajeeshcv.com/2011/11/30/Attach-to-Any-ASP-NET-Web-Server-from-Visual-Studio-in-One-Click/"/>
    <id>http://rajeeshcv.com/2011/11/30/Attach-to-Any-ASP-NET-Web-Server-from-Visual-Studio-in-One-Click/</id>
    <published>2011-11-30T06:25:45.000Z</published>
    <updated>2015-04-22T20:33:35.601Z</updated>
    <content type="html"><![CDATA[<p>This is an update to my previous blog post <a href="/2011/11/26/Attach-to-Visual-Studio-Development-Server-with-One-Click/" title="Attach to Visual Studio Development Server with One Click">Attach to Visual Studio Development Server with One Click</a>.</p>
<p>The Visual Studio Macro from previous article doesn’t support IISExpress or IIS; it only supported the Visual Studio Development Server, more over it doesn’t detect latest Development Web Server <em>WebDev.WebServer40.exe</em>.</p>
<p>Now I have updated the Macro so that it will automatically detect the Web Server setting from the project properties and attach it accordingly.</p>
<p>Below is the code for the new Macro, I think it is self-explanatory</p>
<figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Public</span> <span class="keyword">Sub</span> AttachToWebServer()</span><br><span class="line">    <span class="keyword">Dim</span> attached <span class="keyword">As</span> <span class="built_in">Boolean</span> = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">Dim</span> project <span class="keyword">As</span> EnvDTE.Project = GetStartupProject()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">If</span> (project <span class="keyword">Is</span> <span class="literal">Nothing</span>) <span class="keyword">Then</span></span><br><span class="line">        MsgBox(<span class="string">"Couldn't find a web project that can be attached"</span>)</span><br><span class="line">        <span class="keyword">Return</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line">    attached = AttachToProcess(project)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">If</span> (<span class="keyword">Not</span> attached) <span class="keyword">Then</span></span><br><span class="line">        MsgBox(<span class="string">"Couldn't attach to the process"</span>)</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Function</span> GetStartupProject() <span class="keyword">As</span> EnvDTE.Project</span><br><span class="line">    <span class="keyword">Dim</span> startUpProject <span class="keyword">As</span> <span class="built_in">String</span> = DTE.Solution.Properties.Item(<span class="string">"StartupProject"</span>).Value</span><br><span class="line"></span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> currentProject <span class="keyword">As</span> EnvDTE.Project <span class="keyword">In</span> DTE.Solution.Projects</span><br><span class="line">        <span class="keyword">If</span> currentProject.Name = startUpProject <span class="keyword">Then</span></span><br><span class="line">            <span class="keyword">Return</span> currentProject</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line">    <span class="keyword">Return</span> <span class="literal">Nothing</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Function</span> AttachToProcess(<span class="keyword">ByVal</span> project <span class="keyword">As</span> EnvDTE.Project) <span class="keyword">As</span> <span class="built_in">Boolean</span></span><br><span class="line">    <span class="keyword">Dim</span> serverProcessNamePattern <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line">    <span class="comment">' Using either IIS express or IIS</span></span><br><span class="line">    <span class="keyword">If</span> project.Properties.Item(<span class="string">"WebApplication.UseIIS"</span>).Value = <span class="string">"True"</span> <span class="keyword">Then</span></span><br><span class="line">        <span class="comment">' Using IIS Express</span></span><br><span class="line">        <span class="keyword">If</span> project.Properties.Item(<span class="string">"WebApplication.DevelopmentServerCommandLine"</span>).Value.ToString().Length &gt; <span class="number">0</span> <span class="keyword">Then</span></span><br><span class="line">            serverProcessNamePattern = <span class="string">".*iisexpress.exe"</span></span><br><span class="line">        <span class="keyword">Else</span> <span class="comment">' Real IIS</span></span><br><span class="line">            serverProcessNamePattern = <span class="string">".*w3wp.exe"</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Else</span> <span class="comment">' Assume development web server</span></span><br><span class="line">        serverProcessNamePattern = <span class="string">".*WebDev.WebServer\d+.EXE"</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Return</span> AttachToWebServer(serverProcessNamePattern)</span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Function</span> AttachToWebServer(<span class="keyword">ByVal</span> serverProcessNamePattern <span class="keyword">As</span> <span class="built_in">String</span>) <span class="keyword">As</span> <span class="built_in">Boolean</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Dim</span> attached <span class="keyword">As</span> <span class="built_in">Boolean</span> = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> process <span class="keyword">In</span> DTE.Debugger.LocalProcesses</span><br><span class="line">        <span class="keyword">If</span> (Regex.IsMatch(process.Name, serverProcessNamePattern)) <span class="keyword">Then</span></span><br><span class="line">            process.Attach()</span><br><span class="line">            attached = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">Exit</span> <span class="keyword">For</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Return</span> attached</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure>
<p>Read my previous article <a href="/2011/11/26/Attach-to-Visual-Studio-Development-Server-with-One-Click/" title="Attach to Visual Studio Development Server with One Click">Attach to Visual Studio Development Server with One Click</a> to understand how we can add this Macro as command to the Visual Studio toolbar.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>This is an update to my previous blog post <a href="/2011/11/26/Attach-to-Visual-Studio-Development-Server-with-One-Click/" title="Attach]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Attach to Visual Studio Development Server with One Click]]></title>
    <link href="http://rajeeshcv.com/2011/11/26/Attach-to-Visual-Studio-Development-Server-with-One-Click/"/>
    <id>http://rajeeshcv.com/2011/11/26/Attach-to-Visual-Studio-Development-Server-with-One-Click/</id>
    <published>2011-11-26T06:14:24.000Z</published>
    <updated>2015-04-22T20:33:35.733Z</updated>
    <content type="html"><![CDATA[<p>In my day to day work, during the development I had to attach an ASP.NET application to the development server (Cassini) several times in order to debug and fix a problem.</p>
<p>This task is little bit time consuming because this is how we normally do it</p>
<ol>
<li>Click on the “Attach to Process” menu under the Debug menu</li>
<li>Select the correct process from the list of available processes</li>
<li>Either double click on the select process or click the “Attach” button</li>
</ol>
<p>You can reduce these into two steps, if you assign a short cut key to the <em>Attach to Process</em> command.</p>
<p>What I found is, most of the time is lost for finding and selecting the correct process from the available list of processes in the <em>Attach to Process</em> dialog.</p>
<p>So in order to be more productive, I have created a macro which will automatically attach to the Visual Studio Development Server automatically, saves your time from scroll through the big list of processes.</p>
<p>Below is the code for this macro</p>
<figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Public</span> <span class="keyword">Sub</span> AttachToDevelopmentServer()</span><br><span class="line">    <span class="keyword">Dim</span> attached <span class="keyword">As</span> <span class="built_in">Boolean</span> = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">Dim</span> process <span class="keyword">As</span> EnvDTE.Process</span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> process <span class="keyword">In</span> DTE.Debugger.LocalProcesses</span><br><span class="line">        <span class="keyword">If</span> (process.Name.EndsWith(<span class="string">"WebDev.WebServer20.EXE"</span>)) <span class="keyword">Then</span></span><br><span class="line">            process.Attach()</span><br><span class="line">            attached = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">Exit</span> <span class="keyword">For</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">If</span> (<span class="keyword">Not</span> attached) <span class="keyword">Then</span></span><br><span class="line">        MsgBox(<span class="string">"Couldn't attach to the process"</span>)</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>
<p>If you don’t know to how to create a macro, these are the steps for doing it</p>
<ol>
<li>In Visual Studio Go To the Tools menu</li>
<li>Then select the Macros and then Macros IDE (Short cut is Alt+F11). This will open up a new IDE similar to Visual Studio.</li>
<li>In the project explorer under <em>My Macros</em> you will see <em>My Module</em> or you can create a new module by right clicking on the project, then Add -&gt; Add Module. In my case I created a new module and called it as <em>Extensions</em></li>
<li>Copy and paste above subroutine to that module.</li>
</ol>
<p>Now we have to execute the newly created macros on clicking on a toolbar button. For that, follow these steps</p>
<ol>
<li>In Visual Studio, go to the Tool menu, under that select the Customize menu. This will open up the Customize dialog</li>
<li>Select the Commands tab</li>
<li>Select the Toolbar checkbox and then select the Toolbar on which you want this button to appear from dropdown list. I chose the <em>Standard Toolbar</em></li>
<li>Now click on the “Add Command” button. Then select the Macros from the categories in the <em>Add Command</em> dialog.</li>
<li>Now you will see the list of available macros on the list box on. From that list select your Macro <em>AttachToDevelopmentServer</em> and click OK</li>
<li>If you want, you can customize the text which appears on the command button, by clicking on the <em>Modify Selection</em><br>Here it is how it looked in my machine</li>
</ol>
<p><img src="http://cdn.rajeeshcv.com/images/2011/11/20111126012529_AddCommand_thumb.png" alt="Adding Command to the Visual Studio Toolbar"></p>
<p>That’s it, now you will be able to new button appeared in the standard toolbar. If you click on that, it will automatically attach your web project to the running application in the development server.</p>
<p><img src="http://cdn.rajeeshcv.com/images/2011/11/20111126012540_AttachToProcess_thumb.png" alt="Visual Studio Toolbar after Customization"></p>
<p><strong>Note:</strong> There are couples of problems here</p>
<ol>
<li>This doesn’t work if you have set the IIS Express/IIS itself as the server for running the application.( <em>Update:</em> A new macro to support this feature is exlplained here <a href="/2011/11/30/Attach-to-Any-ASP-NET-Web-Server-from-Visual-Studio-in-One-Click/" title="Attach to Any ASP.NET Web Server from Visual Studio in One Click">Attach to Any ASP.NET Web Server from Visual Studio in One Click</a> )</li>
<li>If you have multiple web applications in your project, it will attach to the first development server. So I suggest you to read my previous post about <a href="/2011/11/24/Multiple-Visual-Studio-Development-Servers-while-Debugging/" title="disabling multiple Visual Studio development webservers">disabling multiple Visual Studio development webservers</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>In my day to day work, during the development I had to attach an ASP.NET application to the development server (Cassini) several times in]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Multiple Visual Studio Development Servers while Debugging]]></title>
    <link href="http://rajeeshcv.com/2011/11/24/Multiple-Visual-Studio-Development-Servers-while-Debugging/"/>
    <id>http://rajeeshcv.com/2011/11/24/Multiple-Visual-Studio-Development-Servers-while-Debugging/</id>
    <published>2011-11-24T10:03:44.000Z</published>
    <updated>2015-04-22T20:33:35.823Z</updated>
    <content type="html"><![CDATA[<p>You might have noticed that when you start debugging an ASP.NET web application, it start more than one visual studio development servers and in the system tray you see something like this</p>
<p><img src="http://cdn.rajeeshcv.com/images/2011/11/20111124063108_Mutiple_development_server_2.png" alt="Multiple Development Servers"></p>
<p>This happens when your solution contains more than one web application, setting one as the StartUp project is not going to help..</p>
<p>The reason for this is - by default any web application is set to start when we trigger the debugging process in visual studio. We need to disable that auto start feature so that only one visual studio development server is getting started when we are debugging.</p>
<p>These are the steps for disabling it</p>
<ol>
<li>Select the web project which you don’t want to start</li>
<li>Go to the properties window (Shortcut – press F4)</li>
<li>Set “Always Start When Debugging” to False</li>
</ol>
<p><img src="http://cdn.rajeeshcv.com/images/2011/11/20111124063119_Disable_Start_When_Debuggin_thumb.png" alt="Disable always start"></p>
<p>This is how you could do it in Visual studio 2010, I hope the same applies to Visual studio 2008 too. Now if you start debugging, you will see only one development webserver.</p>
<p>Hope this helps</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>You might have noticed that when you start debugging an ASP.NET web application, it start more than one visual studio development servers]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Abstractions can also put you in Trouble]]></title>
    <link href="http://rajeeshcv.com/2011/11/19/Abstractions-can-also-put-you-in-Trouble/"/>
    <id>http://rajeeshcv.com/2011/11/19/Abstractions-can-also-put-you-in-Trouble/</id>
    <published>2011-11-19T09:55:05.000Z</published>
    <updated>2015-04-22T20:33:35.595Z</updated>
    <content type="html"><![CDATA[<p>We all have enjoyed the beauty of abstracting out functionality, so that it simplifies the underlying complexity. Sometimes it can come back and hit you on the forehead like a boomerang if we don’t know what is going underneath those hidden layers.</p>
<p>Recently it happened to me with the LINQ provider. If you have a data source then you can build your own Query provider on top of it, so that the users can access your data using the LINQ statements without understand how it is fetched.</p>
<p>For e.g. <a href="http://linqtotwitter.codeplex.com/" target="_blank" rel="external">Linq2Twitter</a> it provides the IQueryable interface which you can use fetch the twitter API without understanding the REST API’s exposed by the Twitter.</p>
<p>Similarly Ayende has created a Linq provider for NHibernate (<a href="https://nuget.org/List/Packages/NHibernate.Linq" target="_blank" rel="external">NHibernate.Linq</a>) which hides complexities of writing Criteria API’s.</p>
<p>This is what happened to me – we had a repository method which is using the NHibernate.Linq and it returned an IQueryable interface of domain model.</p>
<p>Like to the below code(only an example, this is not from the actual codebase itself)</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> IQueryable&lt;Customer&gt; <span class="title">QueryableCustomers</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    session = SessionFactory.OpenSession();</span><br><span class="line">    <span class="keyword">return</span> session.Linq&lt;Customer&gt;().AsQueryable();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In the consumer part (Action method in the controller), we are filtering the customer with a name containing particular string using the Contains method</p>
<p><code>this.dataProvider.QueryableCustomers().Where(x =&gt; x.Name.Contains(&quot;custo&quot;)).ToList();</code></p>
<p>Everything worked as expected, but one day the filtering stopped working, I couldn’t figure it out initially, but when I looked into the <code>QueryableCustomers()</code> method, it has been changed to something like this</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> IQueryable&lt;Customer&gt; <span class="title">QueryableCustomers</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    session = SessionFactory.OpenSession();</span><br><span class="line">    <span class="keyword">return</span> session.Linq&lt;Customer&gt;().ToList().AsQueryable();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Not much difference in the code wise, but internally the earlier code will filter the customers using the SQL statement by adding a where clause to the SQL it generated and later one will fetch all the customers from the DB and filter that result using the LINQ on objects.</p>
<p>SQL generated for initial code</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">SELECT</span></span><br><span class="line">    this_.Id <span class="keyword">as</span> Id0_0_,</span><br><span class="line">    this_.Name <span class="keyword">as</span> Name0_0_,</span><br><span class="line">    this_.Address <span class="keyword">as</span> Address0_0_</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    Customer this_</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">    this_.Name <span class="keyword">like</span> @p0;</span></span><br><span class="line">@p0 = '%custo%'</span><br></pre></td></tr></table></figure>
<p>After code change, the query generated SQL was</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">SELECT</span></span><br><span class="line">this_.Id <span class="keyword">as</span> Id0_0_,</span><br><span class="line">this_.Name <span class="keyword">as</span> Name0_0_,</span><br><span class="line">this_.Address <span class="keyword">as</span> Address0_0_</span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">Customer this_</span></span><br></pre></td></tr></table></figure>
<p>By now you might have realized the reason why the I didn’t get the expected result from the new code change – if not here is the explanation, <strong>Contains</strong> in the earlier code is translated by the NH LINQ provider to a where clause which is case insensitive by default unless you have set any specific Collation in the database or on the column itself but in the other hand new code returned a collection of Customer itself, then we applied String.Contains on the Name property which is case sensitive.</p>
<p>My point here is - we can’t blindly believe in the abstractions provided by anyone without understanding what is happening underneath.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>We all have enjoyed the beauty of abstracting out functionality, so that it simplifies the underlying complexity. Sometimes it can come b]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[How to Move Directories Across SVN Repositories]]></title>
    <link href="http://rajeeshcv.com/2011/11/15/How-to-Move-Directories-Across-SVN-Repositories/"/>
    <id>http://rajeeshcv.com/2011/11/15/How-to-Move-Directories-Across-SVN-Repositories/</id>
    <published>2011-11-15T09:41:45.000Z</published>
    <updated>2015-04-22T20:33:35.770Z</updated>
    <content type="html"><![CDATA[<p>Recently we were restructuring our project repositories, where I had to move a project from it’s own repository to another repository.</p>
<p>When do a move under SVN you need to make sure that the history is not lost, so I will explain two common scenarios and how you could do the SVN move</p>
<h3 id="Scenario_1_-_Moving_files_or_directories_with_in_a_SVN_repository">Scenario 1 - Moving files or directories with in a SVN repository</h3><p>Below is a screen shot of my existing repository and I want to move the <strong>configuration</strong> directory to the <strong>project</strong>  directory without loosing the history.</p>
<p><img src="http://cdn.rajeeshcv.com/images/2011/11/20111115081425_Screen1_thumb.png" alt="SVN repository structure"></p>
<p>First of of all this will work only for the versioned items, so please commit your changes to the directory you want to move before doing this. The steps explained below assumes that you are using Tortoise SVN</p>
<p>Here are the steps</p>
<ol>
<li>Right click on the directory you want to move</li>
<li>Drag and drop on to the directory where you want to move this.</li>
<li>Choose the <strong>SVN Mover Versioned item(s) here</strong> item from the context menu.<br><img src="http://cdn.rajeeshcv.com/images/2011/11/20111115081432_Screen2_thumb.png" alt="Context Menu with move"></li>
<li>Now commit the changes back to the repository.</li>
</ol>
<p>Don’t forget to uncheck <em>Stop on copy/rename</em> option in the <em>Log messages</em> dialog if you are trying to see the history of the moved directory.</p>
<p><img src="http://cdn.rajeeshcv.com/images/2011/11/20111115081442_Screen3_thumb.png" alt="Move configuration"></p>
<h3 id="Scenario_2_–_Moving_directories_across_SVN_repositories">Scenario 2 – Moving directories across SVN repositories</h3><p>In this case I want to move <strong>Project</strong> directory to another repository <strong>Repo2</strong></p>
<p>The first technique I have mentioned will work only if the source and target are under same repository, but in some cases you have to move the directories across different SVN repositories. This cannot be done from a SVN client slike TortoiseSVN, you need o use the utilities that comes with SVN.</p>
<p>Follow these steps</p>
<ol>
<li>Dump the repository to a file using the <code>svnadmin</code> tool – e.g. <code>svnadmin dump c:\Repositories\Repo1 &gt; Repo1file</code></li>
<li>Now load the dumped filed into the target repository – e.g. <code>svnadmin load c:\Repositories\Repo2 &lt; Repo1file</code></li>
</ol>
<p>Here is the full syntax for svnadmin tool</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ svnadmin dump --help</span><br><span class="line">dump: usage: svnadmin dump REPOS_PATH [-r LOWER[:UPPER] ] [--incremental]</span><br><span class="line"></span><br><span class="line">Dump the contents of filesystem to stdout <span class="keyword">in</span> a <span class="string">'dumpfile'</span></span><br><span class="line">portable format, sending feedback to stderr. Dump revisions</span><br><span class="line">LOWER rev through UPPER rev. If no revisions are given, dump all</span><br><span class="line">revision trees. If only LOWER is given, dump that one revision tree.</span><br><span class="line">If --incremental is passed, <span class="keyword">then</span> the first revision dumped will be</span><br><span class="line">a diff against the previous revision, instead of the usual fulltext.</span><br><span class="line"></span><br><span class="line">Valid options:</span><br><span class="line">-r [--revision] arg : specify revision number ARG (or X:Y range)</span><br><span class="line">--incremental  : dump incrementally</span><br><span class="line">--deltas   : use deltas <span class="keyword">in</span> dump output</span><br><span class="line">-q [--quiet]  : no progress (only errors) to stderr</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>Recently we were restructuring our project repositories, where I had to move a project from it’s own repository to another repository.</p]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Stay Away from Request.Url]]></title>
    <link href="http://rajeeshcv.com/2011/10/30/Stay-Away-from-Request-Url/"/>
    <id>http://rajeeshcv.com/2011/10/30/Stay-Away-from-Request-Url/</id>
    <published>2011-10-30T09:30:09.000Z</published>
    <updated>2015-04-22T20:33:35.835Z</updated>
    <content type="html"><![CDATA[<p>The title might be misleading but I will explain why we shouldn’t use the Request.Url in any asp.net application directly.</p>
<p>If you are writing an web application and you don’t know the environment of the server where it is getting deployed, then it is better not to use <code>Request.Url</code> it directly.</p>
<p><img src="http://cdn.rajeeshcv.com/images/2011/10/20111030073847_image_2.png" alt=""></p>
<p>This blog is running on a <a href="/2011/10/27/New-Outlook–Rolling-out-My-Own-Blog-Engine/" title="home grown blog engine">home grown blog engine</a>, which is written using asp.net MVC 3. For implementing some of the functionalities like generating sitemap.xml I had to get the root of the url(i.e. without any path). So I used the <code>Request.Url.GetLeftPart(UriPartial.Authority)</code> method and it worked perfectly on my local machine even when it is deployed my local machine IIS server. When I deployed my blog engine to <a href="https://appharbor.com" target="_blank" rel="external">Appharbor</a> environment, the generated sitemap.xml has a URL with port number like <em>www.rajeeshcv.com:4566</em> instead of just <em>www.rajeeshcv.com</em>.</p>
<h3 id="Why?">Why?</h3><p>After googling for some time I came across the solution posted <a href="https://appharbor.com" target="_blank" rel="external">Appharbor</a> knowledge base - <a href="https://support.appharbor.com/kb/getting-started/workaround-for-generating-absolute-urls-without-port-number" target="_blank" rel="external">workaround for generating absolute urls without port number</a>. In their environment there are load balancers which sits in front on the webserver, which uses a specific port number for contacting the server where the application is running. Below is a simple pictorial representation of that</p>
<p><img src="http://cdn.rajeeshcv.com/images/2011/10/20111030073858_image_4.png" alt="Network with load balancer"></p>
<p>So whenever we try to get <code>Request.Url</code>, application will get the actual request Url received by that webserver, which will have the port number also.</p>
<h3 id="How_to_solve_it">How to solve it</h3><p>Appharbor has provided a code snippet in the same article but it didn’t worked for me, I was still getting port number in the generated Url. My assumption is that, there is condition check for ignoring the local request so that it will work correctly in the local development environment.</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (httpContext.Request.IsLocal)</span><br><span class="line">&#123;</span><br><span class="line">    uriBuilder.Port = httpContext.Request.Url.Port;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>According to the MSDN documentation</p>
<blockquote>
<p>The <code>IsLocal</code> property returns true if the IP address of the request originator is 127.0.0.1 or if the IP address of the request is the same as the server’s IP address.</p>
</blockquote>
<p>In my case I think <code>IsLocal</code> was true (I really don’t the exact reason!!!). So instead of using the appharbor code snippet I came across a code from <a href="http://www.funnelweblog.com/" target="_blank" rel="external">FunnelWeb</a> which does the same (HttpRequestExtensions.cs)</p>
<p>Here is my version of that code</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> Environments the specific request URL.</span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;param name="request"&gt;</span>The request.<span class="xmlDocTag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;returns&gt;</span><span class="xmlDocTag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;remarks&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> Code from FunnelWeb:  https://bitbucket.org/TheBlueSky/funnelweb/src/b64c74f361d3/src/FunnelWeb/Utilities/HttpRequestExtensions.cs</span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/remarks&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Uri <span class="title">EnvironmentSpecificRequestUrl</span><span class="params">(<span class="keyword">this</span> HttpRequestBase request)</span></span><br><span class="line"></span>&#123;</span><br><span class="line"></span><br><span class="line">    UriBuilder hostUrl = <span class="keyword">new</span> UriBuilder();</span><br><span class="line">    <span class="keyword">string</span> hostHeader = request.Headers[<span class="string">"Host"</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (hostHeader.Contains(<span class="string">":"</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        hostUrl.Host = hostHeader.Split(<span class="string">':'</span>)[<span class="number">0</span>];</span><br><span class="line">        hostUrl.Port = Convert.ToInt32(hostHeader.Split(<span class="string">':'</span>)[<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        hostUrl.Host = hostHeader;</span><br><span class="line">        hostUrl.Port = -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Uri url = request.Url;</span><br><span class="line">    UriBuilder uriBuilder = <span class="keyword">new</span> UriBuilder(url);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (String.Equals(hostUrl.Host, <span class="string">"localhost"</span>, StringComparison.OrdinalIgnoreCase) || hostUrl.Host == <span class="string">"127.0.0.1"</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Do nothing</span></span><br><span class="line">        <span class="comment">// When we're running the application from localhost (e.g. debugging from Visual Studio), we'll keep everything as it is.</span></span><br><span class="line">        <span class="comment">// We're not using request.IsLocal because it returns true as long as the request sender and receiver are in same machine.</span></span><br><span class="line">        <span class="comment">// What we want is to only ignore the requests to 'localhost' or the loopback IP '127.0.0.1'.</span></span><br><span class="line">        <span class="keyword">return</span> uriBuilder.Uri;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// When the application is run behind a load-balancer (or forward proxy), request.IsSecureConnection returns 'true' or 'false'</span></span><br><span class="line">    <span class="comment">// based on the request from the load-balancer to the web server (e.g. IIS) and not the actual request to the load-balancer.</span></span><br><span class="line">    <span class="comment">// The same is also applied to request.Url.Scheme (or uriBuilder.Scheme, as in our case).</span></span><br><span class="line">    <span class="keyword">bool</span> isSecureConnection = String.Equals(request.Headers[<span class="string">"X-Forwarded-Proto"</span>], <span class="string">"https"</span>, StringComparison.OrdinalIgnoreCase);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isSecureConnection)</span><br><span class="line">    &#123;</span><br><span class="line">        uriBuilder.Port = hostUrl.Port == -<span class="number">1</span> ? <span class="number">443</span> : hostUrl.Port;</span><br><span class="line">        uriBuilder.Scheme = <span class="string">"https"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        uriBuilder.Port = hostUrl.Port == -<span class="number">1</span> ? <span class="number">80</span> : hostUrl.Port;</span><br><span class="line">        uriBuilder.Scheme = <span class="string">"http"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    uriBuilder.Host = hostUrl.Host;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> uriBuilder.Uri;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Conclusion">Conclusion</h3><p>IMHO this is a limitation with .Net framework itself because here we have to modify the behaviour of the framework class to achieve what we really want . If there is way in which the IIS web server can detect the topology on which it is running, then the <code>HttpRequest.Url</code> could be implemented correctly. So that the developer need not to worry about the deployment scenarios(at least in this simple case).</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>The title might be misleading but I will explain why we shouldn’t use the Request.Url in any asp.net application directly.</p>
<p>If you ]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[New Outlook – Rolling out My Own Blog Engine]]></title>
    <link href="http://rajeeshcv.com/2011/10/27/New-Outlook%E2%80%93Rolling-out-My-Own-Blog-Engine/"/>
    <id>http://rajeeshcv.com/2011/10/27/New-Outlook–Rolling-out-My-Own-Blog-Engine/</id>
    <published>2011-10-27T09:21:11.000Z</published>
    <updated>2015-04-22T20:33:35.826Z</updated>
    <content type="html"><![CDATA[<p>For the last couple of years I was using wordpress as my blogging platform, it is an awesome framework but finally I decided to move away from it and created my own blog engine(Rhyble), on which this blog is running now.</p>
<p><a href="http://rhyble.apphb.com/" target="_blank" rel="external">Rhyble</a> is built using Asp.Net MVC3, NHiberanate and it is running Appharbor</p>
<p><img src="http://cdn.rajeeshcv.com/images/2011/10/20111027084419_image_2.png" alt=""></p>
<p>You might ask why I want reinvent the wheel again because we have many blog engines available today. Jeff Atwood answered that question here - <a href="http://stackoverflow.com/questions/471940/why-does-every-man-and-his-dog-want-to-code-a-blogging-engine/471944#471944" target="_blank" rel="external">Why does every man and his dog want to code a blogging engine?</a></p>
<p>These were my objectives when I started creating Rhyble</p>
<ol>
<li>Focus on the most important functionalities, doesn’t want to create another wordpress with truck full of unwanted things</li>
<li>Improve the performance. Now I have <a href="http://yslow.org/" target="_blank" rel="external">YSlow</a> rating of 94 compared to 65<br>image</li>
<li>I didn’t wanted to go through the existing blog engines code base, which is more time consuming than creating a new one</li>
</ol>
<p><img src="http://cdn.rajeeshcv.com/images/2011/10/20111027084442_image_thumb_1.png" alt="YSlow previous and current ratings"></p>
<p>More over it is a nice feeling if you have something you own. Now I have platform of my own and next things should be blogging frequently.</p>
<p>That’s it for the day.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>For the last couple of years I was using wordpress as my blogging platform, it is an awesome framework but finally I decided to move away]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Web Usability – Avoid an Extra Page Load with OpenSearch]]></title>
    <link href="http://rajeeshcv.com/2011/04/05/Web-Usability%E2%80%93Avoid-an-Extra-Page-Load-with-OpenSearch/"/>
    <id>http://rajeeshcv.com/2011/04/05/Web-Usability–Avoid-an-Extra-Page-Load-with-OpenSearch/</id>
    <published>2011-04-05T09:10:55.000Z</published>
    <updated>2015-04-22T20:33:35.844Z</updated>
    <content type="html"><![CDATA[<p>Now a days most of the websites, blogs or any applications that are on internet will have a search functionality which is great!!!. Before the Omnibox concept was introduced by google chrome, if we want to search something in google, as a user I need to go to www.google.com and type the search query. After the introduction of Omnibox, user don’t need to open the google website instead you could do the search from the address bar itself. From the usability point of view, it is a great functionality IMHO.</p>
<p>From the point of google search application, they have done it smartly. As a web developer how could you provide the same usability feature to your own website. Some of the website I frequently visits has done like this.</p>
<p><img src="http://cdn.rajeeshcv.com/images/2011/04/clip_image001_thumb.png" alt="StackOverflow Opensearch"></p>
<p>If you are in google chrome, after you type the stackoverflow.com a message will be displayed on the address bar saying that <em>Press Tab to search Stack Overflow</em>. If you press tab, you can directly type the search query in the address bar itself and pressing enter will show the results. This basically allows you to do a quick search, instead of going to the website and finding the search box and pressing search button(a long process is it? Smile)</p>
<p>Recently I was working on a hobby project called <a href="http://ifscfinder.apphb.com/" target="_blank" rel="external">ifscfinder</a> , which is a website were you could search for a <em>Indian Finacial System Code</em> of any banks in India. It simply provide a search box where user could enter the Bank/Branch name and it will list the banks that matches the  query.  So I wanted to have the same feature like stackoverflow in my <a href="http://ifscfinder.apphb.com/" target="_blank" rel="external">ifscfinder</a> too.</p>
<p>After googling for sometime, I found about the opensearch which helps to achieve this functionality. You could read more about opensearch from here <a href="http://www.opensearch.org" target="_blank" rel="external">http://www.opensearch.org</a></p>
<p>What I had do was, create an xml file(OpenSearch description document), it will have URL format which needs to be called when user enter a search query. ifscfinder xml file looks like this</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">OpenSearchDescription</span> <span class="attribute">xmlns</span>=<span class="value">"http://a9.com/-/spec/opensearch/1.1/"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">ShortName</span>&gt;</span>IFSC Finder<span class="tag">&lt;/<span class="title">ShortName</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">Description</span>&gt;</span>Search IFSC: Find  Indian Financial System Code of a Bank<span class="tag">&lt;/<span class="title">Description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">InputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="title">InputEncoding</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">Url</span> <span class="attribute">type</span>=<span class="value">"text/html"</span></span><br><span class="line">       <span class="attribute">template</span>=<span class="value">"http://ifscfinder.apphb.com/Search?q=&#123;searchTerms&#125;"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">OpenSearchDescription</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>After this is created, I upload it the website. In order for the browser to sense whether my website opensearch, I had to add link tag to the head element</p>
<p><code>&lt;link rel=&quot;search&quot; type=&quot;application/opensearchdescription+xml&quot; title=&quot;IFSCFinder.com&quot; href=&quot;/opensearchdescription.xml&quot; /&gt;</code></p>
<p>With this <a href="http://ifscfinder.apphb.com/" target="_blank" rel="external">ifscfinder</a> has got a nice quick search option in google chrome</p>
<p><img src="http://cdn.rajeeshcv.com/images/2011/04/clip_image002_thumb.png" alt="ifscfinder opensearch"></p>
<p>Firefox also detect the opensearch , which mean you could add this site to the search engine list in firefox</p>
<p><img src="http://cdn.rajeeshcv.com/images/2011/04/image_thumb.png" alt="Firefox Opensearch"></p>
<p>IE9 doesn’t care about this at all(don’t know why!!!)</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Now a days most of the websites, blogs or any applications that are on internet will have a search functionality which is great!!!. Befor]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[MVC - Rendering View Elements in a Specified Order]]></title>
    <link href="http://rajeeshcv.com/2011/02/27/MVC-Rendering-View-Elements-in-a-Specified-Order/"/>
    <id>http://rajeeshcv.com/2011/02/27/MVC-Rendering-View-Elements-in-a-Specified-Order/</id>
    <published>2011-02-27T09:01:29.000Z</published>
    <updated>2015-04-22T20:33:35.821Z</updated>
    <content type="html"><![CDATA[<p>In my current project, I had to render elements in the view based on a setting provided by the model(basically it is a configurable thing). Few clients need view element to be rendered in a particular order and few others in a different way. What we did was, saved this elements order in a settings file which could be changed based on the clients. Then created an extension to render this based on the order.</p>
<p>This is what was I was trying to explain. for  Client 1 the <em>Login section</em> to be displayed first followed by <em>Password reminder section</em></p>
<p><img src="http://cdn.rajeeshcv.com/images/2011/02/image_thumb.png" alt="Client 1 requirement"></p>
<p>For Client 2 , these sections needs be ordered differently</p>
<p><img src="http://cdn.rajeeshcv.com/images/2011/02/image_thumb1.png" alt="Client 2 requirement"></p>
<p>In order to achieve this, I came up with an <code>HtmlHelper</code> extension</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> Renders the render items in the provided sequence order.</span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;param name="htmlHelper"&gt;</span>The HTML helper which is extended.<span class="xmlDocTag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;param name="sequenceOrder"&gt;</span>The order in which items to be rendered. Sequence starts at an index of 0.<span class="xmlDocTag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;param name="renderItems"&gt;</span>The items to be rendered in order.<span class="xmlDocTag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;remarks&gt;</span></span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> Values in the sequence order should match with the total number of render items.</span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> Invalid sequnce numbers are ignored.</span></span><br><span class="line"><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/remarks&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">OrderBy</span><span class="params">(<span class="keyword">this</span> HtmlHelper htmlHelper, <span class="keyword">int</span>[] sequenceOrder, <span class="keyword">params</span> Action&lt;HtmlHelper&gt;[] renderItems)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (sequenceOrder != <span class="keyword">null</span> &amp;&amp; renderItems != <span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> sequnce <span class="keyword">in</span> sequenceOrder)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// CHeck whether the sequence is with inthe bounds</span></span><br><span class="line">            <span class="keyword">if</span> (sequnce &lt; renderItems.Length &amp;&amp; sequnce &gt;= <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                renderItems[sequnce].Invoke(htmlHelper);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">else</span> <span class="title">if</span> <span class="params">(renderItems != <span class="keyword">null</span>)</span></span><br><span class="line">    </span>&#123;</span><br><span class="line">        <span class="comment">// If the sequence order is not provided, render it in normal order in which items are declared.</span></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> renderItem <span class="keyword">in</span> renderItems)</span><br><span class="line">        &#123;</span><br><span class="line">            renderItem.Invoke(htmlHelper);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Do Nothing</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>In the view, you could do</p>
<figure class="highlight erb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span>&lt;%<span class="ruby"> <span class="constant">Html</span>.<span class="constant">OrderBy</span>(this.<span class="constant">Model</span>.<span class="constant">LoginDisplayOrder</span>, (html) =&gt; &#123; </span>%&gt;<span class="xml"></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"container"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    </span>&lt;%<span class="ruby"> <span class="constant">Html</span>.<span class="constant">RenderPartial</span>(<span class="string">"LoginSection"</span>, this.<span class="constant">Model</span>); </span>%&gt;<span class="xml"></span><br><span class="line"></span>&lt;%<span class="ruby"> &#125;, (html) =&gt; &#123; </span>%&gt;<span class="xml"></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"container"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    </span>&lt;%<span class="ruby"> <span class="constant">Html</span>.<span class="constant">RenderPartial</span>(<span class="string">"ReminderPassword"</span>, this.<span class="constant">Model</span>); </span>%&gt;<span class="xml"></span><br><span class="line"></span>&lt;%<span class="ruby"> &#125;); </span>%&gt;<span class="xml"></span></span><br></pre></td></tr></table></figure>
<p>Here <code>Model.LoginDisplayOrder</code> is just an array of integers in which the items to be rendered.</p>
<p>Hope this will help.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>In my current project, I had to render elements in the view based on a setting provided by the model(basically it is a configurable thing]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Create a Live Aquarium Wallpaper in Android]]></title>
    <link href="http://rajeeshcv.com/2010/12/27/Create-a-Live-Aquarium-Wallpaper-in-Android/"/>
    <id>http://rajeeshcv.com/2010/12/27/Create-a-Live-Aquarium-Wallpaper-in-Android/</id>
    <published>2010-12-27T07:26:03.000Z</published>
    <updated>2015-04-22T20:33:35.755Z</updated>
    <content type="html"><![CDATA[<p><img src="http://cdn.rajeeshcv.com/images/2010/12/image_thumb.png" alt="Final Result 1"><br><img src="http://cdn.rajeeshcv.com/images/2010/12/image_thumb1.png" alt="Final Result 2"></p>
<p>Few weeks ago I started learning Android programming, so this article is an outcome of that out-side office study :). Here I will be explaining – how to create a live wallpaper which looks like an aquarium with fishes swimming across the screen. The fish animation is done using sprite technique.</p>
<p>Fish sprite used here is from a <a href="http://www.codeproject.com/KB/GDI-plus/LovelyGoldFishDeskPet.aspx" target="_blank" rel="external">code project article</a></p>
<p>Lets get started…</p>
<p>Creating a new Android project in eclipse (I am not familiar with any other IDEs for Android development :) ). Now create a class for your live wallpaper service, I called it as <code>AquariumWallpaperService</code>, then instantiate the <code>AquariumWallpaperEngine</code> which is responsible for creating the actual <code>Aquarium</code> class which does all the rendering logic. It also controls the flow of Aquarium based Surface callbacks Below is the code for  <code>AquariumWallpaperService</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AquariumWallpaperService</span> <span class="keyword">extends</span> <span class="title">WallpaperService</span> </span>&#123;</span><br><span class="line">  <span class="annotation">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Engine <span class="title">onCreateEngine</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> AquariumWallpaperEngine();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">AquariumWallpaperEngine</span> <span class="keyword">extends</span> <span class="title">Engine</span></span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">private</span> Aquarium <span class="number">_</span>aquarium;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">AquariumWallpaperEngine</span><span class="params">()</span> </span>&#123;</span><br><span class="line">          <span class="keyword">this</span><span class="number">._</span>aquarium = <span class="keyword">new</span> Aquarium();</span><br><span class="line">          <span class="keyword">this</span><span class="number">._</span>aquarium.initialize(getBaseContext(), getSurfaceHolder());</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="annotation">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onVisibilityChanged</span><span class="params">(<span class="keyword">boolean</span> visible)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">if</span>(visible)&#123;</span><br><span class="line">              <span class="keyword">this</span><span class="number">._</span>aquarium.render();</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="annotation">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSurfaceChanged</span><span class="params">(SurfaceHolder holder, <span class="keyword">int</span> format,</span><br><span class="line">              <span class="keyword">int</span> width, <span class="keyword">int</span> height)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">super</span>.onSurfaceChanged(holder, format, width, height);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="annotation">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSurfaceCreated</span><span class="params">(SurfaceHolder holder)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">super</span>.onSurfaceCreated(holder);</span><br><span class="line">          <span class="keyword">this</span><span class="number">._</span>aquarium.start();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="annotation">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSurfaceDestroyed</span><span class="params">(SurfaceHolder holder)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">super</span>.onSurfaceDestroyed(holder);</span><br><span class="line">          <span class="keyword">this</span><span class="number">._</span>aquarium.stop();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>Aquarium</code> class wraps all the rendering logic, as well as creating the fishes. This also starts a thread which is responsible for updating the view.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Aquarium</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> AquariumThread <span class="number">_</span>aquariumThread;</span><br><span class="line">    <span class="keyword">private</span> SurfaceHolder <span class="number">_</span>surfaceHolder;</span><br><span class="line">    <span class="keyword">private</span> ArrayList&lt;Renderable&gt; <span class="number">_f</span>ishes;</span><br><span class="line">    <span class="keyword">private</span> Bitmap <span class="number">_</span>backgroundImage;</span><br><span class="line">    <span class="keyword">private</span> Context <span class="number">_</span>context;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">render</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Canvas canvas = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line"></span><br><span class="line">            canvas = <span class="keyword">this</span><span class="number">._</span>surfaceHolder.lockCanvas(<span class="keyword">null</span>);</span><br><span class="line">            <span class="keyword">synchronized</span> (<span class="keyword">this</span><span class="number">._</span>surfaceHolder) &#123;</span><br><span class="line">                <span class="keyword">this</span>.onDraw(canvas);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(canvas != <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">this</span><span class="number">._</span>surfaceHolder.unlockCanvasAndPost(canvas);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.renderBackGround(canvas);</span><br><span class="line">        <span class="keyword">for</span> (Renderable renderable : <span class="keyword">this</span><span class="number">._f</span>ishes) &#123;</span><br><span class="line">            renderable.render(canvas);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>aquariumThread.switchOn();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> retry = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>aquariumThread.switchOff();</span><br><span class="line">        <span class="keyword">while</span> (retry) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">this</span><span class="number">._</span>aquariumThread.join();</span><br><span class="line">                retry = <span class="keyword">false</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="comment">// we will try it again and again...</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getLeft</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getRight</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span><span class="number">._</span>backgroundImage.getWidth();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">(Context context, SurfaceHolder surfaceHolder)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>aquariumThread = <span class="keyword">new</span> AquariumThread(<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>surfaceHolder = surfaceHolder;</span><br><span class="line">        <span class="keyword">this</span><span class="number">._f</span>ishes = <span class="keyword">new</span> ArrayList&lt;Renderable&gt;();</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>context = context;</span><br><span class="line">        BitmapFactory.Options options = <span class="keyword">new</span> BitmapFactory.Options();</span><br><span class="line">        options.inPurgeable = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>backgroundImage = BitmapFactory.decodeResource(context.getResources(), com.plugai.android.livewallpapers.R.drawable.aquarium, options);</span><br><span class="line">        <span class="keyword">this</span>.addFishes();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addFishes</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Point startPoint = <span class="keyword">new</span> Point(<span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">        <span class="keyword">this</span><span class="number">._f</span>ishes.add(<span class="keyword">new</span> ClownFish(<span class="keyword">this</span><span class="number">._</span>context, <span class="keyword">this</span>, startPoint, <span class="number">90</span>));</span><br><span class="line">        Point startPoint1 = <span class="keyword">new</span> Point(<span class="number">100</span>, <span class="number">300</span>);</span><br><span class="line">        <span class="keyword">this</span><span class="number">._f</span>ishes.add(<span class="keyword">new</span> ClownFish(<span class="keyword">this</span><span class="number">._</span>context, <span class="keyword">this</span>, startPoint1, <span class="number">50</span>));</span><br><span class="line"></span><br><span class="line">        Point startPoint2 = <span class="keyword">new</span> Point(<span class="number">200</span>, <span class="number">200</span>);</span><br><span class="line">        <span class="keyword">this</span><span class="number">._f</span>ishes.add(<span class="keyword">new</span> ClownFish(<span class="keyword">this</span><span class="number">._</span>context, <span class="keyword">this</span>, startPoint2, <span class="number">15</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">renderBackGround</span><span class="params">(Canvas canvas)</span></span><br><span class="line">    </span>&#123;</span><br><span class="line">        canvas.drawBitmap(<span class="keyword">this</span><span class="number">._</span>backgroundImage, <span class="number">0</span>, <span class="number">0</span>, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Here is the code for <code>AquariumThread</code> class</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AquariumThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Aquarium <span class="number">_</span>aquarium;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> <span class="number">_</span>running;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AquariumThread</span><span class="params">(Aquarium aquarium)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>aquarium = aquarium;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">switchOn</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>running = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">this</span>.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pause</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>running = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">synchronized</span>(<span class="keyword">this</span>)&#123;</span><br><span class="line">            <span class="keyword">this</span>.notify();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">switchOff</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>running = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">synchronized</span>(<span class="keyword">this</span>)&#123;</span><br><span class="line">            <span class="keyword">this</span>.notify();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">this</span><span class="number">._</span>running)&#123;</span><br><span class="line">            <span class="keyword">this</span><span class="number">._</span>aquarium.render();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>All the <em>renderable</em> object in the aquarium must implement an interface <code>Renderable</code>, which has got one single method called <code>render(…)</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.plugai.android.livewallpapers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.graphics.Canvas;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Renderable</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">render</span><span class="params">(Canvas canvas)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>This interface helps to render an object other than a fish, like plants etc… in future. I have created another abstract class which has common functionalities like changing the position and direction of a fish after a particular interval and called it as <code>AquaticAnimal</code>, this is because I could create specific fishes which just differ by it’s look by extending from this class.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AquaticAnimal</span> <span class="keyword">implements</span> <span class="title">Renderable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> MAX_SPEED = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">private</span> Context <span class="number">_</span>context;</span><br><span class="line">    <span class="keyword">private</span> Aquarium <span class="number">_</span>aquarium;</span><br><span class="line">    <span class="keyword">private</span> FishSprite <span class="number">_l</span>eftSprite;</span><br><span class="line">    <span class="keyword">private</span> FishSprite <span class="number">_</span>rightSprite;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> <span class="number">_</span>direction = -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> <span class="number">_</span>speedFraction;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> <span class="number">_</span>previousTime;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AquaticAnimal</span><span class="params">(Context context, Aquarium aquarium)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>context = context;</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>aquarium = aquarium;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">(Bitmap leftBitmap, Bitmap rightBitmap, <span class="keyword">int</span> fps, <span class="keyword">int</span> totalFrames, Point startPoint, <span class="keyword">int</span> speed)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span><span class="number">._l</span>eftSprite = <span class="keyword">new</span> FishSprite(leftBitmap, fps, totalFrames, startPoint);</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>rightSprite = <span class="keyword">new</span> FishSprite(rightBitmap, fps, totalFrames, startPoint);</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>speedFraction = (MAX_SPEED / speed) * <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> FishSprite <span class="title">getSprite</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span><span class="number">._</span>direction &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span><span class="number">._l</span>eftSprite;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span><span class="number">._</span>rightSprite;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getDirection</span><span class="params">()</span></span>&#123;</span><br><span class="line">        FishSprite sprite = <span class="keyword">this</span>.getSprite();</span><br><span class="line">        <span class="keyword">int</span> xPos = sprite.getXPos();</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span><span class="number">._</span>direction &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            xPos += sprite.getWidth();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(xPos &lt; <span class="keyword">this</span><span class="number">._</span>aquarium.getLeft())&#123;</span><br><span class="line">            <span class="keyword">this</span><span class="number">._</span>direction = <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="function"><span class="keyword">else</span> <span class="title">if</span><span class="params">(xPos &gt; <span class="keyword">this</span>._aquarium.getRight()</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span><span class="number">._</span>direction = -<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">// Do nothing</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span><span class="number">._</span>direction;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Context <span class="title">getContext</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span><span class="number">._</span>context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Aquarium <span class="title">getAquarium</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span><span class="number">._</span>aquarium;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">render</span><span class="params">(Canvas canvas)</span></span>&#123;</span><br><span class="line">        <span class="keyword">long</span> currentTime = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">this</span>.getSprite().render(canvas, currentTime);</span><br><span class="line">        <span class="keyword">this</span>.swim(currentTime);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">swim</span><span class="params">(<span class="keyword">long</span> currentTime)</span></span>&#123;</span><br><span class="line">        <span class="keyword">long</span> diff = currentTime - <span class="keyword">this</span><span class="number">._</span>previousTime;</span><br><span class="line">        <span class="keyword">if</span>(diff &gt; <span class="keyword">this</span><span class="number">._</span>speedFraction)&#123;</span><br><span class="line">            <span class="keyword">int</span> currentX = <span class="keyword">this</span>.getSprite().getXPos();</span><br><span class="line">            <span class="keyword">this</span>.getSprite().setXPos(currentX + <span class="keyword">this</span>.getDirection());</span><br><span class="line">            <span class="keyword">this</span><span class="number">._</span>previousTime = currentTime;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>The sprite animation is moved into a specific class <code>FishSprite</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FishSprite</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="javadoc">/**</span><br><span class="line">     * Private fields</span><br><span class="line">     */</span></span><br><span class="line">    <span class="keyword">private</span> Bitmap <span class="number">_</span>currentSpriteBitmap;</span><br><span class="line">    <span class="keyword">private</span> Rect <span class="number">_</span>drawRect;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> <span class="number">_f</span>ps;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> <span class="number">_</span>noOfFrames;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> <span class="number">_</span>currentFrame;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> <span class="number">_</span>timer;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> <span class="number">_</span>spriteWidth;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> <span class="number">_</span>spriteHeight;</span><br><span class="line">    <span class="keyword">private</span> Point <span class="number">_</span>position;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FishSprite</span><span class="params">(Bitmap spriteBitmap, <span class="keyword">int</span> fps, <span class="keyword">int</span> frameCount, Point startPoint)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.initialize();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>position = startPoint;</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>currentSpriteBitmap = spriteBitmap;</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>spriteHeight = spriteBitmap.getHeight();</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>spriteWidth = spriteBitmap.getWidth() / frameCount;</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>drawRect = <span class="keyword">new</span> Rect(<span class="number">0</span>,<span class="number">0</span>, <span class="keyword">this</span><span class="number">._</span>spriteWidth, <span class="keyword">this</span><span class="number">._</span>spriteHeight);</span><br><span class="line">        <span class="keyword">this</span><span class="number">._f</span>ps = <span class="number">1000</span> / fps;</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>noOfFrames = frameCount;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>drawRect = <span class="keyword">new</span> Rect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>timer = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>currentFrame = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span><span class="params">(<span class="keyword">long</span> currentTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(currentTime &gt; <span class="keyword">this</span><span class="number">._</span>timer + <span class="keyword">this</span><span class="number">._f</span>ps ) &#123;</span><br><span class="line">            <span class="keyword">this</span><span class="number">._</span>timer = currentTime;</span><br><span class="line">            <span class="keyword">this</span><span class="number">._</span>currentFrame +=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">this</span><span class="number">._</span>currentFrame &gt;= <span class="keyword">this</span><span class="number">._</span>noOfFrames) &#123;</span><br><span class="line">                <span class="keyword">this</span><span class="number">._</span>currentFrame = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>drawRect.left = <span class="keyword">this</span><span class="number">._</span>currentFrame * <span class="keyword">this</span><span class="number">._</span>spriteWidth;</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>drawRect.right = <span class="keyword">this</span><span class="number">._</span>drawRect.left + <span class="keyword">this</span><span class="number">._</span>spriteWidth;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">render</span><span class="params">(Canvas canvas, <span class="keyword">long</span> currentTime)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.Update(currentTime);</span><br><span class="line"></span><br><span class="line">        Rect dest = <span class="keyword">new</span> Rect(getXPos(), getYPos(), getXPos() + <span class="keyword">this</span><span class="number">._</span>spriteWidth,</span><br><span class="line">                        getYPos() + <span class="keyword">this</span><span class="number">._</span>spriteHeight);</span><br><span class="line"></span><br><span class="line">        canvas.drawBitmap(<span class="keyword">this</span><span class="number">._</span>currentSpriteBitmap, <span class="keyword">this</span><span class="number">._</span>drawRect, dest, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Point <span class="title">getPosition</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">_</span>position;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPosition</span><span class="params">(Point position)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>position = position;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getYPos</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span><span class="number">._</span>position.y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getXPos</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span><span class="number">._</span>position.x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setYPos</span><span class="params">(<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>position.y = y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setXPos</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span><span class="number">._</span>position.x = x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getWidth</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span><span class="number">._</span>spriteWidth;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getHeight</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span><span class="number">._</span>spriteHeight;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Now to the final bit, that is creating a fish. you might have noticed that I have created an object of <code>ClownFish</code>in the Aquarium class. <code>ClownFish</code> is just a derived class from <code>AquaticAnimal</code>, with a specific sprite image. So if you have sprite images for a shark, you could simple extend a new class for a shark with that image.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClownFish</span> <span class="keyword">extends</span> <span class="title">AquaticAnimal</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TOTAL_FRAMES_IN_SPRITE = <span class="number">20</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CLOWN_FISH_FPS = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ClownFish</span><span class="params">(Context context, Aquarium aquarium,  Point startPoint, <span class="keyword">int</span> speed)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, aquarium);</span><br><span class="line">        BitmapFactory.Options options = <span class="keyword">new</span> BitmapFactory.Options();</span><br><span class="line">        options.inPurgeable = <span class="keyword">true</span>;</span><br><span class="line">        Bitmap leftBitmap = BitmapFactory.decodeResource(getContext().getResources(), com.plugai.android.livewallpapers.R.drawable.left, options);</span><br><span class="line">        BitmapFactory.Options options1 = <span class="keyword">new</span> BitmapFactory.Options();</span><br><span class="line">        options1.inPurgeable = <span class="keyword">true</span>;</span><br><span class="line">        Bitmap rightBitmap = BitmapFactory.decodeResource(getContext().getResources(), com.plugai.android.livewallpapers.R.drawable.right, options1);</span><br><span class="line">        <span class="keyword">this</span>.initialize(leftBitmap, rightBitmap, CLOWN_FISH_FPS, TOTAL_FRAMES_IN_SPRITE, startPoint, speed);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">render</span><span class="params">(Canvas canvas)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.render(canvas);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Please feel free to go through the code, If I haven’t explained clearly. Hope this article helped some way or other.</p>
<p><strong>Happy new year!!!</strong></p>
<blockquote>
<p>Full source code is available <a href="https://github.com/cvrajeesh/LiveAquariumWallpaper" target="_blank" rel="external">here</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://cdn.rajeeshcv.com/images/2010/12/image_thumb.png" alt="Final Result 1"><br><img src="http://cdn.rajeeshcv.com/images/201]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[It’s Better to Automate, Instead of Checklists]]></title>
    <link href="http://rajeeshcv.com/2010/09/20/It%E2%80%99s-Better-to-Automate-Instead-of-Checklists/"/>
    <id>http://rajeeshcv.com/2010/09/20/It’s-Better-to-Automate-Instead-of-Checklists/</id>
    <published>2010-09-20T07:16:38.000Z</published>
    <updated>2015-04-22T20:33:35.811Z</updated>
    <content type="html"><![CDATA[<p>In my day to day activities I have seen many checklists like</p>
<ol>
<li><a href="http://en.wikipedia.org/wiki/Code_review" target="_blank" rel="external">Code review</a> checklist</li>
<li>Source control check-in checklist</li>
<li>Developer checklist</li>
</ol>
<p>All these are good because it helps to reduce failures but does everyone follow these all the time?. Sometimes I (or any developer) forgot to go through the checklist due to many reasons like time constraints, lack of concentration etc… and I don’t think we should blame anyone for missing this because - <em>We all are humans and we tends to forget</em>.</p>
<p>Only way we could reduce these mistakes is to automate!!! wherever possible. In my current project, all the aspx page should have direction(dir) attribute in the html tag as part of the localization work. As usual an email with  checklist for localizing an aspx page was sent to all the developers, out of that one item was to include <code>dir</code> attribute whenever they add new aspx file.</p>
<p>Everybody followed this in the initial stages but later we started forgetting about this requirement, which caused extra hours of effort to fix it in all the pages.</p>
<p>It could have been avoided if we had a automated process which verifies this. In order to automate, one way is to write a custom MSBuild task which could verify whether a aspx file has <code>dir</code> attribute, if it doesn’t fails build (this whole idea came from <a href="http://blogs.msdn.com/b/simonince/archive/2009/07/10/enforcing-unobtrusive-javascript.aspx" target="_blank" rel="external">http://blogs.msdn.com/b/simonince/archive/2009/07/10/enforcing-unobtrusive-javascript.aspx</a>). If you want to learn about writing a custom MSBuild task, I suggest <a href="http://msdn.microsoft.com/en-us/library/t9883dzc.aspx" target="_blank" rel="external">http://msdn.microsoft.com/en-us/library/t9883dzc.aspx</a>.</p>
<p>So here is the  code which creates this custom MS Build task</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> HtmlAgilityPack;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Build.Framework;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Build.Utilities;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">StaticFileAnalysisTask</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="xmlDocTag">///</span> Custom MSBuild task which analyse the HTML code validation.</span></span><br><span class="line">    <span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">HTMLCodingStandard</span> : <span class="title">Task</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="preprocessor">#<span class="keyword">region</span> Private fields</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span> Variable that holds the status of this task execution.</span></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">bool</span> _success;</span><br><span class="line"></span><br><span class="line">        <span class="preprocessor">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">        <span class="preprocessor">#<span class="keyword">region</span> Public properties</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span> Gets or sets the source file list.</span></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;value&gt;</span>The source file list.<span class="xmlDocTag">&lt;/value&gt;</span></span></span><br><span class="line">        [Required]</span><br><span class="line">        <span class="keyword">public</span> ITaskItem[] SourceFiles &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span> Gets or sets the list of files to be excluded.</span></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;value&gt;</span>The excluded files.<span class="xmlDocTag">&lt;/value&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> ITaskItem[] ExcludeFiles &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="preprocessor">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span> Executes this task.</span></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;returns&gt;</span><span class="xmlDocTag">&lt;c&gt;</span>true<span class="xmlDocTag">&lt;/c&gt;</span> if task executed successfully; Otherwise, <span class="xmlDocTag">&lt;c&gt;</span>false<span class="xmlDocTag">&lt;/c&gt;</span>.<span class="xmlDocTag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="title">Execute</span><span class="params">()</span></span><br><span class="line">        </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>._success = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">foreach</span> (ITaskItem current <span class="keyword">in</span> SourceFiles)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// If the items is in the exluded list, then skip</span></span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">this</span>.IsInExlcudedList(current))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">string</span> path = current.ItemSpec;</span><br><span class="line">                <span class="keyword">if</span> (path.EndsWith(<span class="string">".aspx"</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">this</span>.ValidateFile(path);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>._success;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span> Method that is responsible for validating the file.</span></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;param name="path"&gt;</span>The full path to the file.<span class="xmlDocTag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ValidateFile</span><span class="params">(<span class="keyword">string</span> path)</span></span><br><span class="line">        </span>&#123;</span><br><span class="line">            HtmlDocument htmlDocument = <span class="keyword">new</span> HtmlDocument();</span><br><span class="line">            htmlDocument.Load(path);</span><br><span class="line">            HtmlNode node = htmlDocument.DocumentNode.SelectSingleNode(<span class="string">"//html"</span>);</span><br><span class="line">            <span class="keyword">if</span>(node != <span class="keyword">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(!node.Attributes.Contains(<span class="string">"dir"</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">this</span>.BuildEngine.LogErrorEvent(<span class="keyword">new</span> BuildErrorEventArgs(</span><br><span class="line">                        <span class="string">"Invalid HTML coding standard"</span>,</span><br><span class="line">                        <span class="string">"SFAT-HTML-1"</span>,</span><br><span class="line">                        path,</span><br><span class="line">                        node.Line,</span><br><span class="line">                        node.LinePosition,</span><br><span class="line">                        node.LinePosition,</span><br><span class="line">                        node.LinePosition + node.OuterHtml.Length,</span><br><span class="line">                        <span class="string">"SFAT-HTML-1: Direction(dir) tag is missing"</span>,</span><br><span class="line">                        <span class="keyword">null</span>,</span><br><span class="line">                        <span class="string">"HTMLCodingStandardTask"</span></span><br><span class="line">                        ));</span><br><span class="line">                    <span class="keyword">this</span>._success = <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span> Determines whether an item is in the excluded list.</span></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;param name="taskItem"&gt;</span>The task item which needs to checked.<span class="xmlDocTag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;returns&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span>     <span class="xmlDocTag">&lt;c&gt;</span>true<span class="xmlDocTag">&lt;/c&gt;</span> if item is in exlcuded list; otherwise, <span class="xmlDocTag">&lt;c&gt;</span>false<span class="xmlDocTag">&lt;/c&gt;</span>.</span></span><br><span class="line">        <span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">bool</span> <span class="title">IsInExlcudedList</span><span class="params">(ITaskItem taskItem)</span></span><br><span class="line">        </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">this</span>.ExcludeFiles == <span class="keyword">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.ExcludeFiles.Any(x =&gt; x.ItemSpec == taskItem.ItemSpec);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>For including this in the your web project, open the project file in a text editor and add the below lines</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">UsingTask</span> <span class="attribute">AssemblyFile</span>=<span class="value">"..\output\StaticFileAnalysisTask.dll"</span> <span class="attribute">TaskName</span>=<span class="value">"HTMLCodingStandard"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">Target</span> <span class="attribute">Name</span>=<span class="value">"BeforeBuild"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">HTMLCodingStandard</span> <span class="attribute">SourceFiles</span>=<span class="value">"@(Content)"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">Target</span>&gt;</span> If you want to exclude any files from this verification process, then define an ItemGroup</span><br><span class="line"><span class="tag">&lt;<span class="title">ItemGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">ExcludedContents</span> <span class="attribute">Include</span>=<span class="value">"WebForm2.aspx"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">ItemGroup</span>&gt;</span> and add that to the build action like below</span><br><span class="line"> <span class="tag">&lt;<span class="title">UsingTask</span> <span class="attribute">AssemblyFile</span>=<span class="value">"..\output\StaticFileAnalysisTask.dll"</span> <span class="attribute">TaskName</span>=<span class="value">"HTMLCodingStandard"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">Target</span> <span class="attribute">Name</span>=<span class="value">"BeforeBuild"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">HTMLCodingStandard</span> <span class="attribute">SourceFiles</span>=<span class="value">"@(Content)"</span> <span class="attribute">ExcludeFiles</span>=<span class="value">"@(ExcludedContents)"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">Target</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Hope this helps you.</p>
<blockquote>
<p>Download code sample from <a href="http://cdn.rajeeshcv.com/download/TestWebApplication.zip" target="_blank" rel="external">here</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>In my day to day activities I have seen many checklists like</p>
<ol>
<li><a href="http://en.wikipedia.org/wiki/Code_review" target="_bla]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[User Experience Makes Applications Stand-out]]></title>
    <link href="http://rajeeshcv.com/2010/06/01/User-Experience-Makes-Applications-Stand-out/"/>
    <id>http://rajeeshcv.com/2010/06/01/User-Experience-Makes-Applications-Stand-out/</id>
    <published>2010-06-01T07:11:03.000Z</published>
    <updated>2015-04-22T20:33:35.839Z</updated>
    <content type="html"><![CDATA[<p>What makes your application different from others? I strongly feel the user experience that you provides plays an important role to be successful. Some of us might have felt that(at least myself), you woke up one day with a brand new idea but later you realize that somebody had implemented that an year back. Which is a frustrated feeling, I have been to that situation so many times. So even if that idea exists already, how to make that idea a successful one.</p>
<p><img src="http://cdn.rajeeshcv.com/images/2010/06/standout_thumb.jpg" alt="Stand-out"></p>
<p>Say if you are going to enter in to a world where there are n number of similar applications, how will you attract the users? A great example may be GMail, IMHO they entered to the party when Yahoo and Microsoft where ruling email market. But now GMail is much popular than other email service providers. One reason I could think of for this success is the experience that you get as a user.</p>
<p>Not sure whether anybody has noted this or not but today when was about to send an email to my friend, I got a message box saying <strong>Did you mean to attach files?</strong></p>
<p><img src="http://cdn.rajeeshcv.com/images/2010/06/clip_image001_thumb.png" alt="Screenshot"></p>
<p>Yes, GMail reminded me to attach the file. I was surprised to see this, GMail has intelligently scanned what I have typed in the email message and gave me suggestion before sending…. WOW!!!!!. I checked whether Yahoo mail has got this feature, not yet. That makes GMail stand-out from others.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>What makes your application different from others? I strongly feel the user experience that you provides plays an important role to be su]]>
    </summary>
    
  </entry>
  
</feed>